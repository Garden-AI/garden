apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-endpoint
spec:
{{- if and .Values.useClientCredentials .Values.useUserCredentials }}
  {{- fail "Please specify EXACTLY one of 'useClientCredentials' (boolean) or 'useUserCredentials' (boolean)"}}
{{- else if not (or .Values.useClientCredentials .Values.useUserCredentials) }}
  {{- fail "Please specify one of 'useClientCredentials' (boolean) or 'useUserCredentials' (boolean)"}}
{{- end }}
{{- if not .Values.endpointUUID }}
  {{- fail "Must specify 'endpointUUID'" }}
{{- end }}

  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-endpoint
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-endpoint
    spec:
      serviceAccountName: {{ template "globus_compute_endpoint.fullname" . }}
      securityContext:
        fsGroup: 1000
      containers:
      - name: {{ .Release.Name }}-endpoint
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "/home/compute/boot.sh {{ coalesce .Values.endpointName .Release.Name }} {{ .Values.endpointUUID }} {{ .Values.endpointCLIargs }}" ]
        tty: true
        stdin: true
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}
        env:
        {{- if .Values.useClientCredentials }}
          {{- if not .Values.secrets }}
            {{- fail "Missing `secrets` store specification for client credentials" }}
          {{- end }}
          - name: FUNCX_SDK_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secrets }}
                key: FUNCX_SDK_CLIENT_ID
          - name: FUNCX_SDK_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secrets }}
                key: FUNCX_SDK_CLIENT_SECRET
        {{- end }}
        {{- if .Values.taskTTLSeconds }}
          - name: GC_TASK_TIMEOUT
            value: "{{ .Values.taskTTLSeconds }}"
        {{- end }}

        volumeMounts:
          - mountPath: "/mnt"
            name: computemnt
          {{- if .Values.useUserCredentials }}
          - name: compute-sdk-tokens
            mountPath: /compute/credentials
            readOnly: true
          {{- end }}
          - name: endpoint-config
            mountPath: /compute/config
          - name: endpoint-instance-config
            mountPath: /compute/ep_instance

        ports:
          - containerPort: 5000

      volumes:
        - name: computemnt
          emptyDir: {}
        {{- if .Values.useUserCredentials }}
        - name: compute-sdk-tokens
          secret:
            secretName: compute-sdk-tokens
        {{- end }}
        - name: endpoint-config
          configMap:
            name: {{ .Release.Name }}-endpoint-config
        - name: endpoint-instance-config
          configMap:
            name: {{ .Release.Name }}-endpoint-instance-config
